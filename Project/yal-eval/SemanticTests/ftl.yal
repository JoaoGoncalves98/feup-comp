module semantictest {

    a = [20];
    a = 2;

    arr = [20];
    arr = [30];                                         // err1 duplicate global

    global = 1;
    global = 2;                                         // err2 duplicate global

    function ret=main(b[]) {

        scal1 = 5;
        scal2 = scal1 + scal1;
        ret = a + b;                                    // err6 err7 scalar = array + array
        ret = a + scal1;                                // err8 scalar = array + scalar
        ret = scal1 + b;                                // err9 scalar = scalar + array
        ret = scal1 * scal1;                            // scalar = scalar * scalar
        ret = -5 / -6;                                  // scalar = const / const
        ret = -5 - scal1;                               // scalar = const - scalar
        ret = scal2 * 60;                               // scalar = scalar * const
        ret = 250 / b;                                  // err10 scalar = const / array
        ret = a & +6;                                   // err11 scalar = array & const

        scal2 = a.size ^ scal1;                         // scalar = size ^ scalar
        scal2 = a.size;                                 // scalar = size

        scal1 = io.func(a);
        c = [scal1];
        c = scal1;
    }

    function a[]=f() {
        a = [20];
        a = 3;
    }

    function scal=scalar(let, bad[]) {
        scal = 2;
    }

    function f() {                                      // err3 duplicate function name

    }

    function calltest() {

        c(a);                                           // err12 c() not declared
        scalar = c(arr) + not();                        // err13 err14 c() not declared, not() not declared, return types invalid for operation
        scalar = f();                                   // err15 assign scalar to array return
        a = f();
        a = scalar(5, arr);                             // assigning scalar return to array
        a = a.size;
        a = io.func();
        scalar = io.func2();

        i = 3;
        a[i] = i;
        ai=a[i];

        if(i == 3) {
            b = [20];
        } else {
            b = 2;
        }
        // c = b;

        io.println("hello");
        scalar = scalar(5);                             // err16 wrong number of arguments
        scalar = scalar(5, arr);
        scalar = scalar(arr, arr);                      // err17 wrong argument type
        scalar = scalar(scalar, scalar);                // err18 wrong argument type
        scalar = scalar(scalar, arr);
        scalar = scalar(newscal, newarr);               // err19 err20 undeclared locals
        scalar = scalar(newscal, arr);                  // err21 undeclared local
    }

    function param(a, a[], bad, let, bad[]) {           // err4 err5 duplicate param names
        io.println("hello");
    }

    function scal=moreerrors() {

        scal = 2;
        newscal = scal.size + 5;                        // err23 .size on scalar
        arr.size = 5;                                   // err24 .size on LHS

        myscal = 2;
        myscal = [20];                                  // err25 already a scalar
        global = [myscal];                              // err26 already a (global) scalar


        newarr = [20];
        newarr = 5 + scalar(global, arr);
        newarr = arr ^ myscal;                          // err27 array on operation
        newarr = myscal & f();                          // err28 array on operation

        newarr = arr;                                   // TODO SHOULD NOT BE ERROR (Global defined as int???)
        myscal = arr[myscal] * arr[0];

        newarr = [nope.size];                           // err29 undeclared variable
        myscal = notdecl + arr[notdecl2];               // err30 err31 undeclared variables + TODO Extra Type mismatch (probably same error as 99)
        myscal = scalar(global, arr) ^ undecl;          // err32 err33 undeclared variable + TODO Extra Type mismatch (probably same error as 99)
        notarray[0] = global + myscal;                  // err34 undeclared array access on LHS

        arr[undecl] = 5;                                // err35 undeclared index

        anotherarr = [N];                               // err36 undeclared variable used as size
    }

    function nope=noreturn() {                          // err37 return type not declared in locals / params / globals

        myscal = 5;
    }

    function nope[]=wrongtype() {                       

        nope = 5;
    }
   
    function a=globalmismatch() {                       // err38 return type mismatch with global array
   
        a[0] = 5;
    }

    function scal=seemsgood(scal) {


    }

    function letsgoforifs() {

        m = 1;
        
        if(m==1) {                                     
		    n=[20];
        } else {
            n=2;                                        // err39 type mismatch
        }
        o = n;                                          // err40 undefined err 41 type mismatch

        if(m==1) {
            o=3;
        } else {
            p=2;                               
        }
        o = p;                                          // err42 undefined because of error in if

        if(m==1){
            j=0;
        }
    }
}
